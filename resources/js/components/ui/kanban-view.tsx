import React from 'react';
import { ViewConfig } from '../../types';

// üöÄ USANDO PAPA LEGUAS KANBAN DIRETAMENTE
import { KanbanBoard } from '../papa-leguas/kanban';

// Tipo mais flex√≠vel para configura√ß√£o Kanban
interface KanbanConfig extends Record<string, any> {
    searchable?: boolean;
    filterable?: boolean;
    height?: string;
    columnsPerRow?: number;
    dragAndDrop?: boolean;
    workflowBased?: boolean;
    groupBy?: string;
    title?: string;
    description?: string;
    columns?: any[];
    tableColumns?: any[];
}

interface KanbanViewProps {
    data: any[];
    columns: any[];
    config: KanbanConfig;
    actions?: any;
    className?: string;
}

/**
 * üöÄ PAPA LEGUAS KANBAN - CONFIA NO BACKEND
 * 
 * SE CHEGOU AQUI, BACKEND J√Å VALIDOU TUDO
 * 
 * REGRAS:
 * ‚úÖ Backend s√≥ envia view=kanban se tudo estiver configurado
 * ‚úÖ Frontend n√£o faz valida√ß√µes, s√≥ renderiza
 * ‚úÖ Papa Leguas Kanban direto
 * ‚úÖ Debug para acompanhar dados recebidos
 */
export default function KanbanView({
    data = [],
    columns = [],
    config = {},
    actions = {},
    className = ''
}: KanbanViewProps) {

    console.log(data);

    // üîß Preparar colunas Kanban - Backend j√° validou
    const kanbanColumns = React.useMemo(() => {
        console.log('‚úÖ Colunas do backend:', config.columns);
        return config.columns || [];
    }, [config.columns]);

    // ‚öôÔ∏è Configura√ß√£o do Papa Leguas Kanban
    const kanbanConfig = {
        searchable: config.searchable ?? true,
        filterable: config.filterable ?? true,
        height: config.height || '700px',
        columnsPerRow: config.columnsPerRow || 4,
        dragAndDrop: config.dragAndDrop || false,
        ...config
    };

    // üìã Meta informa√ß√µes
    const meta = {
        title: config.title || 'Quadro Kanban',
        description: config.description || `Visualiza√ß√£o em Kanban com ${data.length} itens`,
        key: 'papa-leguas-kanban'
    };

    return (
        <div className={className}>
            <KanbanBoard
                data={data}
                columns={kanbanColumns}
                tableColumns={columns}
                actions={actions}
                config={kanbanConfig}
                meta={meta}
                onAction={(actionId, item, extra) => {
                    console.log('üéØ Papa Leguas Kanban - A√ß√£o:', actionId, item, extra);
                    // TODO: Implementar handler de a√ß√µes
                }}
                onFilter={(filters) => {
                    console.log('üîç Papa Leguas Kanban - Filtros:', filters);
                    // TODO: Implementar handler de filtros
                }}
                onRefresh={() => {
                    console.log('üîÑ Papa Leguas Kanban - Refresh');
                    // TODO: Implementar refresh
                }}
            />
        </div>
    );
}

// ‚ö†Ô∏è FUN√á√ÉO REMOVIDA: generateFallbackKanbanColumns
// Frontend confia que backend j√° validou tudo 